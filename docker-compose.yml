
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: taskdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d taskdb"]
      interval: 10s
      timeout: 5s
      retries: 6

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      ZOO_CLIENT_PORT: 2181
      ZOO_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 15s
      timeout: 10s
      retries: 10

  kafka:
    image: bitnami/kafka:3.5
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_HEAP_OPTS: "-Xmx1024M -Xms1024M"
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 60s
      timeout: 30s
      retries: 15
      start_period: 180s

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    command: uvicorn fastapi_app.main:app --reload --host 0.0.0.0 --port 8001
    volumes:
      - ./fastapi_app:/app/fastapi_app
    ports:
      - "8001:8001"
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_RETRIES: "5"
      KAFKA_RETRY_BACKOFF_MS: "1000"

  kafka_consumer:
    build:
      context: .
      dockerfile: Dockerfile.kafka_consumer
    command: python kafka_consumer/consumer.py
    volumes:
      - ./kafka_consumer:/app/kafka_consumer
    depends_on:
      kafka:
        condition: service_healthy

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.6.1
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_POLLING_TIMEOUT: "10000"
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy

volumes:
  postgres_data:
